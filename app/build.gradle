apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    def string = stdout.toString().trim()
    def s = string.find("^\\d+\\.\\d+\\-\\d+")
    if (s == null || s.isEmpty()) {
        s = string.find("^\\d+\\.\\d+")
    }
    return s.replaceAll("-", ".")
}

def getVersionCode = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', 'HEAD', '--count'
        standardOutput = stdout
    }
    return stdout.toString().trim().toInteger()
}

android {
    signingConfigs {
        defaultSigningConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.develop.dubhad.sdlab"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode getVersionCode()
        versionName getVersionName()
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.defaultSigningConfig
        }
        debug {
            debuggable true
            applicationIdSuffix ".debug"
        }
    }
    flavorDimensions "version"
    productFlavors {
        original {
            dimension "version"
        }
        develop {
            dimension "version"
            versionNameSuffix "-dev"
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def appId = applicationId
            def version = variant.versionName
            outputFileName = "${appId}-${version}.apk"
        }
    }
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'androidx.core:core:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
}
